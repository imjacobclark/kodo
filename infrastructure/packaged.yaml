AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  KodoPutEventHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: KodoPutEventHandler
      Handler: src/handlers/events/putEvent.handler
      Runtime: nodejs8.10
      Events:
        KodoStatEvent:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - KodoEventQueue
              - Arn
            BatchSize: 10
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:UpdateItem
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/KodoEventStore
      CodeUri: s3://kodo-lambda/9b0654b31c3161c7e519617aae80ac80
  KodoCalculateAllTimeUserStatsHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: KodoCalculateAllTimeUserStatsHandler
      Handler: src/handlers/stats/calculateAllTimeUserStatsFromEvents.handler
      Runtime: nodejs8.10
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt:
              - KodoEventStore
              - StreamArn
            BatchSize: 1000
            StartingPosition: TRIM_HORIZON
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:PutItem
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/KodoCalculationTable
      CodeUri: s3://kodo-lambda/9b0654b31c3161c7e519617aae80ac80
  KodoCalculateDailyUserStatsHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: KodoCalculateDailyUserStatsHandler
      Handler: src/handlers/stats/calculateDailyUserStatsFromEvents.handler
      Runtime: nodejs8.10
      Timeout: 10
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt:
              - KodoEventStore
              - StreamArn
            BatchSize: 1000
            StartingPosition: TRIM_HORIZON
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:PutItem
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/KodoDailyCalculationTable
      CodeUri: s3://kodo-lambda/9b0654b31c3161c7e519617aae80ac80
  KodoGetUserStatsHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: KodoGetUserStatsHandler
      Handler: src/handlers/stats/getUserStats.handler
      Runtime: nodejs8.10
      Events:
        Api:
          Type: Api
          Properties:
            Path: /v1/stats/{userId}
            Method: Get
            RestApiId:
              Ref: KodoApi
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/KodoCalculationTable
      CodeUri: s3://kodo-lambda/9b0654b31c3161c7e519617aae80ac80
  KodoEventQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: KodoEventQueue
  KodoEventQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
      - Ref: KodoEventQueue
      PolicyDocument:
        Statement:
          Effect: Allow
          Principal: '*'
          Action: sqs:SendMessage
          Resource:
            Fn::GetAtt:
            - KodoEventQueue
            - Arn
  KodoApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: KodoApi
      EndpointConfiguration: REGIONAL
      StageName: production
      DefinitionBody:
        swagger: '2.0'
        info:
          version: '1'
          title: kodo
        basePath: /v1
        schemes:
        - https
        paths:
          /v1/send:
            get:
              produces:
              - application/json
              parameters:
              - name: MessageBody
                in: query
                required: true
                type: string
              x-amazon-apigateway-integration:
                credentials:
                  Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/kodo-apigateway
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:sqs:path/${KodoEventQueue.QueueName}
                responses:
                  default:
                    statusCode: '200'
                requestParameters:
                  integration.request.querystring.MessageBody: method.request.querystring.MessageBody
                  integration.request.querystring.Action: '''SendMessage'''
                  integration.request.header.Content-Type: '''application/json'''
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws
          /v1/stats/{userId}:
            get:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:KodoGetUserStatsHandler/invocations
                responses:
                  default:
                    statusCode: '200'
                passthroughBehavior: when_no_match
                httpMethod: POST
                contentHandling: CONVERT_TO_TEXT
                type: aws_proxy
  KodoEventStore:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: KodoEventStore
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  KodoCalculationStore:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: KodoCalculationTable
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  KodoDailyCalculationStore:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: KodoDailyCalculationTable
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      - AttributeName: date
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      - AttributeName: date
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
